name: Publish release

on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always
  DEBIAN_FRONTEND: noninteractive

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
      - name: Update APT and install deps
        run: |
          sudo apt-get update -o Acquire::Retries=3
          sudo apt-get install -y --no-install-recommends \
            pkg-config libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev
      - name: Run tests
        run: cargo test --verbose
      - name: Run build
        run: |
          cargo build --release
          strip --strip-all ./target/release/editor || true
          mv ./target/release/editor ./target/release/editor-linux
      - name: Upload release (linux)
        uses: alexellis/upload-assets@0.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_paths: '["./target/release/editor-linux"]'

  build-macos:
    runs-on: macos-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: brew install cmake ffmpeg freetype glew glslang googletest libpng molten-vk opusfile rust SDL2 spirv-tools vulkan-headers wavpack x264
      - name: Run tests
        run: cargo test --verbose
      - name: Run build
        run: |
          cargo build --release
          mv ./target/release/editor ./target/release/editor-macos
      - name: Upload release (macOS)
        uses: alexellis/upload-assets@0.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_paths: '["./target/release/editor-macos"]'

  build-windows:
    runs-on: windows-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        run: cargo test --verbose
      - name: Run build
        run: cargo build --release
      - name: Upload release (Windows)
        uses: alexellis/upload-assets@0.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_paths: '["./target/release/editor.exe"]'
